*{
    margin: 0;
    padding: 0;
    border: 0;
    outline: 0;
    text-decoration: none;
    list-style: none;
    box-sizing: border-box;
}

:root{
    --color-black: #000;
}

.container {  display: grid;
    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
    grid-template-rows: 1fr 1fr 1fr 1.2fr 0.8fr 1fr;
    gap: 10px 10px;
    grid-auto-flow: row;
    grid-template-areas:
      "Display Display Display Display Display"
      "clear clear clear backspace backspace"
      "seven eight nine operations operations"
      "four five six operations operations"
      "one two three operations operations"
      "zero double-zero point equal-to equal-to";
}

.operations {  display: grid;
    grid-template-columns: 1.4fr 1.4fr;
    grid-template-rows: 1.1fr 0.8fr 1.1fr;
    gap: 20px 20px;
    grid-auto-flow: row;
    grid-template-areas:
      "minus plus"
      "minus plus"
      "divide multiply";
    grid-area: operations;
}
  
.Display { grid-area: Display; }
  
.seven { grid-area: seven; }
  
.eight { grid-area: eight; }
  
.nine { grid-area: nine; }
  
.four { grid-area: four; }
  
.five { grid-area: five; }
  
.six { grid-area: six; }
  
.one { grid-area: one; }
  
.two { grid-area: two; }
  
.three { grid-area: three; }
  
.minus { grid-area: minus; }
  
.plus { grid-area: plus; }
  
.divide { grid-area: divide; }
  
.multiply { grid-area: multiply; }
  
.zero { grid-area: zero; }
  
.double-zero { grid-area: double-zero; }
  
.point { grid-area: point; }
  
.equal-to { grid-area: equal-to; }
  
.clear { grid-area: clear; }
  
.backspace { grid-area: backspace; }

.container{
    height: 90vh;
    width: 60vh;
    margin: auto;
}

.clac-item{
    padding: 30px;
    background-color: brown;
}

.container input[type='number'], .container button{
    width: 100%;
    height: 100%;
    padding: 3%;
    border: 3px solid var(--color-black);
}


  